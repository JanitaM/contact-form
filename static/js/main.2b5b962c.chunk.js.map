{"version":3,"sources":["components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","name","email","content","values","setValues","isSending","setIsSending","handleChange","e","preventDefault","target","value","style","maxWidth","margin","Typography","component","TextField","marginBottom","label","fullWidth","onChange","Button","onClick","axios","method","url","crossDomain","headers","data","then","response","console","log","catch","error","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSA4FeA,EAxFF,WAAO,IAAD,EACWC,mBAAS,CACnCC,KAAM,GACNC,MAAO,GACPC,QAAS,KAJM,mBACVC,EADU,KACFC,EADE,OAOiBL,oBAAS,GAP1B,mBAOVM,EAPU,KAOCC,EAPD,KASXC,EAAe,SAACC,GACpBA,EAAEC,iBACFL,EAAU,2BAAKD,GAAN,kBAAeK,EAAEE,OAAOV,KAAOQ,EAAEE,OAAOC,UAiCnD,OACE,qCACE,8CACA,+CAEA,sBAAMC,MAAO,CAAEC,SAAU,QAASC,OAAQ,UAA1C,SACGT,EACC,cAACU,EAAA,EAAD,CAAYC,UAAU,KAAtB,wBAEA,qCACE,cAACC,EAAA,EAAD,CACEL,MAAO,CAAEM,aAAc,QACvBC,MAAM,OACNnB,KAAK,OACLW,MAAOR,EAAOH,KACdoB,WAAS,EACTC,SAAUd,IAEZ,cAACU,EAAA,EAAD,CACEL,MAAO,CAAEM,aAAc,QACvBC,MAAM,QACNnB,KAAK,QACLW,MAAOR,EAAOF,MACdmB,WAAS,EACTC,SAAUd,IAEZ,cAACU,EAAA,EAAD,CACEL,MAAO,CAAEM,aAAc,QACvBC,MAAM,UACNnB,KAAK,UACLW,MAAOR,EAAOD,QACdkB,WAAS,EACTC,SAAUd,IAEZ,cAACe,EAAA,EAAD,CAAQV,MAAO,CAAEE,OAAQ,QAAUS,QAhEzB,WAClBjB,GAAa,GAEbkB,IAAM,CACJC,OAAQ,OACRC,IACE,wEACFC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CACJ7B,KAAMG,EAAOH,KACbC,MAAOE,EAAOF,MACdC,QAASC,EAAOD,WAGjB4B,MAAK,SAACC,GACLzB,GAAa,GACb0B,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GAAD,OAAWH,QAAQC,IAAIE,MAEhC/B,EAAU,CACRJ,KAAM,GACNC,MAAO,GACPC,QAAS,MAsCH,2BCvEGkC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2b5b962c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, TextField, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nconst Form = () => {\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    content: ''\r\n  });\r\n\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    setIsSending(true);\r\n\r\n    axios({\r\n      method: 'post',\r\n      url:\r\n        'https://ln34dstzff.execute-api.us-east-1.amazonaws.com/dev/email/send',\r\n      crossDomain: 'true',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: {\r\n        name: values.name,\r\n        email: values.email,\r\n        content: values.content\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setIsSending(false);\r\n        console.log(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    setValues({\r\n      name: '',\r\n      email: '',\r\n      content: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Contact Form</h1>\r\n      <p>Send a message</p>\r\n\r\n      <form style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n        {isSending ? (\r\n          <Typography component='h4'>Sending...</Typography>\r\n        ) : (\r\n          <>\r\n            <TextField\r\n              style={{ marginBottom: '1rem' }}\r\n              label='Name'\r\n              name='name'\r\n              value={values.name}\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              style={{ marginBottom: '1rem' }}\r\n              label='Email'\r\n              name='email'\r\n              value={values.email}\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              style={{ marginBottom: '1rem' }}\r\n              label='Message'\r\n              name='content'\r\n              value={values.content}\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n            <Button style={{ margin: '1rem' }} onClick={sendMessage}>\r\n              Send\r\n            </Button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import './App.css';\nimport Form from './components/Form';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}